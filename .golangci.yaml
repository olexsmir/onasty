version: "2"
run:
  tests: true

linters:
  default: none
  enable:
    - errcheck # checking for unchecked errors
    - govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks
    - ineffassign # detects when assignments to existing variables are not used
    - unused # checks for unused constants, variables, functions and types
    - asasalint # checks for pass []any as any in variadic func(...any)
    - asciicheck # checks that your code does not contain non-ASCII identifiers
    - bidichk # checks for dangerous unicode character sequences
    - bodyclose # checks whether HTTP response body is closed successfully
    - cyclop # checks function and package cyclomatic complexity
    - dupl # tool for code clone detection
    - durationcheck # checks for two durations multiplied together
    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13
    - exhaustive # checks exhaustiveness of enum switch statements
    - forbidigo # forbids identifiers
    - funlen # tool for detection of long functions
    - gocheckcompilerdirectives # validates go compiler directive comments (//go:)
    - gochecknoinits # checks that no init functions are present in Go code
    - gochecksumtype # checks exhaustiveness on Go "sum types"
    - goconst # finds repeated strings that could be replaced by a constant
    - gocritic # provides diagnostics that check for bugs, performance and style issues
    - gocyclo # computes and checks the cyclomatic complexity of functions
    - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod
    - goprintffuncname # checks that printf-like functions are named with f at the end
    - gosec # inspects source code for security problems
    - lll # reports long lines
    - loggercheck # checks key value pairs for common logger libraries (kitlog,klog,logr,zap)
    - makezero # finds slice declarations with non-zero initial length
    - mirror # reports wrong mirror patterns of bytes/strings usage
    - musttag # enforces field tags in (un)marshaled structs
    - nakedret # finds naked returns in functions greater than a specified function length
    - nestif # reports deeply nested if statements
    - nilerr # finds the code that returns nil even if it checks that the error is not nil
    - nilnil # checks that there is no simultaneous return of nil error and an invalid value
    - noctx # finds sending http request without context.Context
    - nolintlint # reports ill-formed or insufficient nolint directives
    - nonamedreturns # reports all named returns
    - nosprintfhostport # checks for misuse of Sprintf to construct a host with port in a URL
    - perfsprint # checks that fmt.Sprintf can be replaced with a faster alternative
    - predeclared # finds code that shadows one of Go's predeclared identifiers
    - promlinter # checks Prometheus metrics naming via promlint
    - protogetter # reports direct reads from proto message fields when getters should be used
    - reassign # checks that package variables are not reassigned
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - rowserrcheck # checks whether Err of rows is checked successfully
    - sloglint # ensure consistent code style when using log/slog
    - sqlclosecheck # checks that sql.Rows and sql.Stmt are closed
    - testableexamples # checks if examples are testable (have an expected output)
    - testifylint # checks usage of github.com/stretchr/testify
    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes
    - unconvert # removes unnecessary type conversions
    - unparam # reports unused function parameters
    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
    - wastedassign # finds wasted assignment statements
    - whitespace # detects leading and trailing whitespace
    - inamedparam # peports interfaces with unnamed method parameters
    - forcetypeassert # finds forced type assertions.
    - exhaustruct # checks if all structure fields are initialized.
    - err113 # forbids usage of dynamic errors
    - contextcheck # check whether the function uses a non-inherited context
    - ireturn # accept interfaces, return concrete types

  settings:
    cyclop:
      max-complexity: 30
      package-average: 10

    errcheck:
      check-type-assertions: true

    exhaustruct:
      exclude:
        - log/slog\.HandlerOptions
        - net/http\.(Server|Client|Response)
        - github.com/golang-jwt/jwt/v5\.RegisteredClaims
        - github.com/gin-contrib/cors\.Config
        - github.com/prometheus/client_golang/prometheus\.(CounterOpts|HistogramOpts)

    funlen:
      lines: 100
      statements: 50
      ignore-comments: true

    gocritic:
      settings:
        captLocal:
          paramsOnly: false
        underef:
          skipRecvDeref: false

    govet:
      disable:
        - fieldalignment
      enable-all: true

  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - gocritic
        source: //noinspection
      - linters:
          - bodyclose
          - dupl
          - err113
          - funlen
          - goconst
          - gosec
          - lll
          - noctx
          - wrapcheck
        path: _test\.go
    paths:
      - third_party$
      - builtin$
      - examples$

issues:
  max-same-issues: 50

formatters:
  enable:
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
